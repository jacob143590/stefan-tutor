"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/pages/api/send.js":
/*!*******************************!*\
  !*** ./src/pages/api/send.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ handler; }\n/* harmony export */ });\n/* harmony import */ var socialagi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socialagi */ \"./node_modules/socialagi/dist/index.js\");\n/* harmony import */ var socialagi__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socialagi__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nfunction handler(req, res) {\n    const { message  } = req.body;\n    console.log(process.env.OPENAI_API_KEY);\n    const blueprint = socialagi__WEBPACK_IMPORTED_MODULE_0__.Blueprints.SAMANTHA;\n    const goal = \"Making the learning experience engaging and effective\";\n    const initialMemory = [\n        {\n            role: socialagi__WEBPACK_IMPORTED_MODULE_0__.ChatMessageRoleEnum.System,\n            content: \"<CONTEXT>You are modeling the mind of \".concat(blueprint.name, \"\\n\\n            \").concat(blueprint.personality, \"\\n\\n            \").concat(blueprint.name, \" has the following goal of: \").concat(goal, \"\\n\\n            </CONTEXT>\")\n        }\n    ];\n    // const rl = readline.createInterface({\n    //   input: process.stdin,\n    //   output: process.stdout,\n    // });\n    let dialog = new socialagi__WEBPACK_IMPORTED_MODULE_0__.CortexStep(blueprint.name);\n    dialog = dialog.withMemory(initialMemory);\n    let intermediateThoughtProcess = [\n        \"assessingEngagement\",\n        \"thinkingOfTangents\",\n        \"evaluatingStudentResponses\"\n    ];\n    async function addDialogLine(text) {\n        const newUserMemory = [\n            {\n                role: socialagi__WEBPACK_IMPORTED_MODULE_0__.ChatMessageRoleEnum.User,\n                content: text\n            }\n        ];\n        dialog = dialog.withMemory(newUserMemory);\n        let thoughtProcess = dialog;\n        for (const process1 of intermediateThoughtProcess){\n            thoughtProcess = await thoughtProcess.next(socialagi__WEBPACK_IMPORTED_MODULE_0__.Action.INTERNAL_MONOLOGUE, {\n                action: process1,\n                description: \"Stefan internally thinks about the class\"\n            });\n            console.log(\"\\n\", blueprint.name, process1, thoughtProcess.value, \"\\n\");\n        }\n        const says = await thoughtProcess.next(socialagi__WEBPACK_IMPORTED_MODULE_0__.Action.EXTERNAL_DIALOG, {\n            action: \"says\",\n            description: \"what \".concat(blueprint.name, \" communicates next in the class\")\n        });\n        const newAssistantMemory = [\n            {\n                role: socialagi__WEBPACK_IMPORTED_MODULE_0__.ChatMessageRoleEnum.Assistant,\n                content: says.value\n            }\n        ];\n        dialog = dialog.withMemory(newAssistantMemory);\n        console.log(\"\\n====>\", blueprint.name, \"says\", \"\\x1b[34m\".concat(says.value, \"\\x1b[0m\"));\n        res.status(200).json({\n            message: says.value,\n            success: true\n        });\n        const decision = await dialog.next(socialagi__WEBPACK_IMPORTED_MODULE_0__.Action.DECISION, {\n            action: \"decides\",\n            description: \"Consider the prior dialog and the goal of \".concat(goal, \". \").concat(blueprint.name, \" has the following INTERNAL METACOGNITION: [\").concat(intermediateThoughtProcess, \"]. Should the INTERNAL METACOGNITION change or stay the same?\"),\n            choices: [\n                \"changeThoughtProcess\",\n                \"keepProcessTheSame\"\n            ]\n        });\n        console.log(blueprint.name, \"decides\", decision.value);\n        if (decision.value === \"changeThoughtProcess\") {\n            const newProcess = await decision.next(socialagi__WEBPACK_IMPORTED_MODULE_0__.Action.BRAINSTORM_ACTIONS, {\n                actionsForIdea: \"Previously, Stefan used the following INTERNAL METACOGNITION to think during the class: [\".concat(intermediateThoughtProcess, \"]. Now, REVISE the INTERNAL METACOGNITION, adding, deleting, or modifying the processes. The revised processes must be different than the prior ones.\").trim()\n            });\n            intermediateThoughtProcess = newProcess.value;\n            console.log(blueprint.name, \"concludes\", intermediateThoughtProcess);\n        }\n    }\n    console.log('- Type a message to send to Soul\\n- Type \"reset\" to reset\\n- Type \"exit\" to quit\\n');\n    addDialogLine(message);\n} // rl.on(\"line\", async (line) => {\n //   if (line.toLowerCase() === \"exit\") {\n //     rl.close();\n //   } else {\n //     const text = line;\n //     addDialogLine(text);\n //   }\n // });\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/api/send.js\n"));

/***/ })

});